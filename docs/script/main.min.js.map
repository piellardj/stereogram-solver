{"version":3,"sources":["webpack://stereogram-solver/./src/ts/input-image.ts","webpack://stereogram-solver/./src/ts/processing.ts","webpack://stereogram-solver/./src/ts/visualization.ts","webpack://stereogram-solver/webpack/bootstrap","webpack://stereogram-solver/./src/ts/main.ts"],"names":["setFailedToLoadError","url","id","div","document","getElementById","errorsSection","createElement","appendChild","style","display","textContent","onChangeObservers","this","container","classList","add","presetSelect","options","buildOption","value","label","option","select","defaultOption","disabled","hidden","buildSelect","addEventListener","onPresetChange","presetContainer","presetLabel","htmlFor","uploadFileButton","fileInputContainer","type","accept","event","stopPropagation","files","length","FileReader","onload","image","Image","loadedImage","callObservers","src","result","readAsDataURL","urlInput","urlInputContainer","inputContainer","placeholder","urlLoadButton","loadImage","preset","Page","version","startingImage","observer","InputImage","canvas","context","getContext","detectBasePeriod","width","height","drawImage","imageData","getImageData","testedLines","delta","i","push","Math","floor","computeTestedLines","MAX_DISPLACEMENT_ALLOWED","differences","displacement","Processing","MIN_DISPLACEMENT_ALLOWED","totalDifference","iY","iX","baseIndex","targetIndex","dRed","data","dGreen","dBlue","abs","averageDifference","computeBestDisplacement","highestGradientIndex","highestGradient","gradient","_displacement","textOutputContainer","imageSize","createTextNode","textOutputImageSize","textOuputDisplacement","displacementRange","min","max","step","onNewDisplacement","canvasElement","maxWidth","canvasContext","_image","toFixed","update","globalCompositeOperation","setCompositingError","Visualization","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","rawImage","inputImage","visualization","processing","sourceImageSection","description","onNewImage","parentElement","removeChild"],"mappings":"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","file":"main.min.js","sourcesContent":["import \"./page-interface-generated.ts\"\r\n\r\n\r\nfunction setFailedToLoadError(url: string | null): void {\r\n    const id = \"IMAGE_FAILED_TO_LOAD\";\r\n\r\n    let div = document.getElementById(id);\r\n    if (!div) {\r\n        const errorsSection = document.getElementById(\"errors\");\r\n        div = document.createElement(\"div\");\r\n        div.id = id;\r\n        errorsSection.appendChild(div);\r\n    }\r\n\r\n    if (url === null) {\r\n        div.style.display = \"none\";\r\n    } else {\r\n        div.style.display = \"\";\r\n        div.textContent = `Failed to load image from url: '${url}'.`;\r\n    }\r\n}\r\n\r\ntype Observer = () => unknown;\r\n\r\ninterface ISelectOption {\r\n    value: string;\r\n    label: string;\r\n}\r\n\r\nconst SELECT_DEFAULT_VALUE = \"\";\r\n\r\nfunction buildSelect(options: ISelectOption[]): HTMLSelectElement {\r\n    function buildOption(value: string, label: string): HTMLOptionElement {\r\n        const option = document.createElement(\"option\");\r\n        option.value = value;\r\n        option.label = label;\r\n        return option;\r\n    }\r\n\r\n    const select = document.createElement(\"select\");\r\n    const defaultOption = buildOption(SELECT_DEFAULT_VALUE, \"Choose a preset\");\r\n    defaultOption.disabled = true;\r\n    defaultOption.hidden = true;\r\n    select.appendChild(defaultOption);\r\n    for (const option of options) {\r\n        select.appendChild(buildOption(option.value, option.label));\r\n    }\r\n\r\n    return select;\r\n}\r\n\r\nclass InputImage {\r\n    public readonly onChangeObservers: Observer[] = [];\r\n\r\n    public readonly container: HTMLElement;\r\n\r\n    private readonly presetSelect: HTMLSelectElement;\r\n    private readonly uploadFileButton: HTMLInputElement;\r\n    private readonly urlInput: HTMLInputElement;\r\n    private readonly urlLoadButton: HTMLButtonElement;\r\n\r\n    private loadedImage: HTMLImageElement;\r\n\r\n    public constructor() {\r\n        this.container = document.createElement(\"section\");\r\n        this.container.id = \"input-section\";\r\n        this.container.classList.add(\"contents-section\");\r\n\r\n        {\r\n            this.presetSelect = buildSelect([\r\n                { value: \"shark.jpg\", label: \"Shark\" },\r\n                { value: \"thumbsup.jpg\", label: \"Thumbs up\" },\r\n                { value: \"planet.jpg\", label: \"Planet\" },\r\n                { value: \"dolphins.jpg\", label: \"Dolphins\" },\r\n                { value: \"atomium.jpg\", label: \"Atomium\" },\r\n            ]);\r\n            this.presetSelect.id = \"preset-select\";\r\n            this.presetSelect.addEventListener(\"change\", () => { this.onPresetChange(); });\r\n\r\n            const presetContainer = document.createElement(\"div\");\r\n            presetContainer.classList.add(\"input-row\");\r\n            const presetLabel = document.createElement(\"label\");\r\n            presetLabel.htmlFor = this.presetSelect.id;\r\n            presetLabel.textContent = \"Choose a preset: \";\r\n\r\n            presetContainer.appendChild(presetLabel);\r\n            presetContainer.appendChild(this.presetSelect);\r\n\r\n            this.container.appendChild(presetContainer);\r\n        }\r\n\r\n        {\r\n            this.uploadFileButton = document.createElement(\"input\");\r\n            this.uploadFileButton.id = \"image-upload\";\r\n\r\n            const fileInputContainer = document.createElement(\"div\");\r\n            fileInputContainer.classList.add(\"input-row\");\r\n            const label = document.createElement(\"label\");\r\n            label.htmlFor = this.uploadFileButton.id;\r\n            label.textContent = \"Choose from your computer: \";\r\n            fileInputContainer.appendChild(label);\r\n\r\n            this.uploadFileButton.type = \"file\";\r\n            this.uploadFileButton.accept = \".png,.jpg,.bmp,.webp\";\r\n            this.uploadFileButton.addEventListener(\"change\", (event: Event) => {\r\n                event.stopPropagation();\r\n                const files = this.uploadFileButton.files;\r\n                if (files.length === 1) {\r\n                    const reader = new FileReader();\r\n                    reader.onload = () => {\r\n                        const image = new Image();\r\n                        image.addEventListener(\"load\", () => {\r\n                            this.loadedImage = image;\r\n                            this.presetSelect.value = SELECT_DEFAULT_VALUE;\r\n                            this.callObservers();\r\n                        });\r\n                        image.src = reader.result as string;\r\n                    };\r\n                    reader.readAsDataURL(files[0]);\r\n                }\r\n            }, false);\r\n\r\n            fileInputContainer.appendChild(this.uploadFileButton);\r\n            this.container.appendChild(fileInputContainer);\r\n        }\r\n\r\n        {\r\n            this.urlInput = document.createElement(\"input\");\r\n            this.urlInput.id = \"url-input\";\r\n\r\n            const urlInputContainer = document.createElement(\"div\");\r\n            urlInputContainer.classList.add(\"input-row\");\r\n            const label = document.createElement(\"label\");\r\n            label.htmlFor = this.urlInput.id;\r\n            label.textContent = \"Choose from the Internet: \";\r\n            urlInputContainer.appendChild(label);\r\n\r\n            const inputContainer = document.createElement(\"div\");\r\n            this.urlInput.type = \"text\";\r\n            this.urlInput.placeholder = \"Image url...\";\r\n            inputContainer.appendChild(this.urlInput);\r\n\r\n            this.urlLoadButton = document.createElement(\"button\");\r\n            this.urlLoadButton.textContent = \"Load from URL\";\r\n            inputContainer.appendChild(this.urlLoadButton);\r\n\r\n            this.urlLoadButton.addEventListener(\"click\", () => {\r\n                this.loadImage(this.urlInput.value);\r\n                this.presetSelect.value = SELECT_DEFAULT_VALUE;\r\n                this.uploadFileButton.value = \"\";\r\n            })\r\n\r\n            urlInputContainer.appendChild(inputContainer);\r\n            this.container.appendChild(urlInputContainer);\r\n        }\r\n\r\n        this.onPresetChange();\r\n    }\r\n\r\n    public get image(): HTMLImageElement {\r\n        return this.loadedImage;\r\n    }\r\n\r\n    private onPresetChange(): void {\r\n        const preset = this.presetSelect.value;\r\n        if (preset) {\r\n            const url = `resources/images/${preset}?v=${Page.version}`;\r\n            this.loadImage(url);\r\n            this.uploadFileButton.value = \"\";\r\n        }\r\n    }\r\n\r\n    private loadImage(url: string): void {\r\n        const startingImage = new Image();\r\n        startingImage.addEventListener(\"load\", () => {\r\n            setFailedToLoadError(null);\r\n\r\n            this.loadedImage = startingImage;\r\n            this.callObservers();\r\n        });\r\n        startingImage.addEventListener(\"error\", () => {\r\n            setFailedToLoadError(url);\r\n        });\r\n        startingImage.src = url;\r\n    }\r\n\r\n    private callObservers(): void {\r\n        for (const observer of this.onChangeObservers) {\r\n            observer();\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    InputImage,\r\n};\r\n","\r\n\r\nclass Processing {\r\n    private readonly canvas: HTMLCanvasElement;\r\n    private readonly context: CanvasRenderingContext2D;\r\n\r\n    private static readonly MIN_DISPLACEMENT_ALLOWED = 10;\r\n\r\n    public constructor() {\r\n        this.canvas = document.createElement(\"canvas\");\r\n        this.context = this.canvas.getContext(\"2d\");\r\n    }\r\n\r\n    public detectBasePeriod(image: HTMLImageElement): number {\r\n        this.canvas.width = image.width;\r\n        this.canvas.height = image.height;\r\n        this.context.drawImage(image, 0, 0);\r\n        const imageData = this.context.getImageData(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n        const MAX_TESTED_LINES_COUNT = 50;\r\n        const computeTestedLines = (): number[] => {\r\n            const result: number[] = [];\r\n            const delta = (imageData.height < MAX_TESTED_LINES_COUNT) ? 1 : (imageData.height / MAX_TESTED_LINES_COUNT);\r\n            for (let i = 0; i < imageData.height; i += delta) {\r\n                result.push(Math.floor(i));\r\n            }\r\n            return result;\r\n        };\r\n\r\n        const testedLines = computeTestedLines();\r\n\r\n        const MAX_DISPLACEMENT_ALLOWED = imageData.width / 3;\r\n\r\n        const differences = []; // displacement=0 is considered as unavailable so set a high value for it\r\n\r\n        for (let displacement = Processing.MIN_DISPLACEMENT_ALLOWED; displacement <= MAX_DISPLACEMENT_ALLOWED; displacement++) {\r\n            let totalDifference = 0;\r\n            for (const iY of testedLines) {\r\n                for (let iX = displacement; iX < imageData.width; iX++) {\r\n                    const baseIndex = 4 * (iX + iY * imageData.width);\r\n                    const targetIndex = baseIndex - 4 * displacement;\r\n\r\n                    const dRed = imageData.data[baseIndex] - imageData.data[targetIndex];\r\n                    const dGreen = imageData.data[baseIndex + 1] - imageData.data[targetIndex + 1];\r\n                    const dBlue = imageData.data[baseIndex + 2] - imageData.data[targetIndex + 2];\r\n\r\n                    const difference = (Math.abs(dRed) + Math.abs(dGreen) + Math.abs(dBlue)) / 3;\r\n                    totalDifference += difference;\r\n                }\r\n            }\r\n\r\n            const nbPixels = (testedLines.length * (imageData.width - displacement));\r\n            const averageDifference = totalDifference / nbPixels;\r\n            differences.push(averageDifference);\r\n        }\r\n\r\n        const bestDisplacement = this.computeBestDisplacement(differences) + Processing.MIN_DISPLACEMENT_ALLOWED;\r\n        return bestDisplacement;\r\n    }\r\n\r\n    private computeBestDisplacement(differences: number[]): number {\r\n        // when reaching the correct delta, on most stereograms the total difference is at its lowest, and goes right up just after\r\n        // so try to detect this point\r\n        let highestGradientIndex = 1;\r\n        let highestGradient = -1;\r\n        for (let i = 2; i < differences.length - 1; i++) {\r\n            const gradient = differences[i + 1] - differences[i];\r\n\r\n            // console.log(`${i + Processing.MIN_DISPLACEMENT_ALLOWED}:\\t${differences[i]}\\t${gradient}`);\r\n            if (gradient > highestGradient) {\r\n                highestGradientIndex = i;\r\n                highestGradient = gradient;\r\n            }\r\n        }\r\n\r\n        // The gradient helps determine the end of the lowest plateau.\r\n        // Once found, check what was just before because maybe it was better\r\n        for (let i = 0; i < 3; i++) {\r\n            if (highestGradientIndex > 0 && differences[highestGradientIndex - 1] < differences[highestGradientIndex]) {\r\n                highestGradientIndex--;\r\n            }\r\n        }\r\n        return highestGradientIndex;\r\n    }\r\n}\r\n\r\nexport {\r\n    Processing,\r\n};\r\n","function setCompositingError(): void {\r\n    const id = \"COMPOSITING_ERROR\";\r\n\r\n    if (!document.getElementById(id)) {\r\n        const errorsSection = document.getElementById(\"errors\");\r\n        const div = document.createElement(\"div\");\r\n        div.id = id;\r\n        div.textContent = \"Your browser does not support the 'difference' globalCompositeOperation. This project will not run as expected.\";\r\n        errorsSection.appendChild(div);\r\n    }\r\n\r\n}\r\n\r\nclass Visualization {\r\n    public readonly container: HTMLElement;\r\n\r\n    private readonly displacementRange: HTMLInputElement;\r\n    private readonly canvasElement: HTMLCanvasElement;\r\n    private readonly canvasContext: CanvasRenderingContext2D;\r\n\r\n    private readonly textOutputImageSize: HTMLSpanElement;\r\n    private readonly textOuputDisplacement: HTMLSpanElement;\r\n\r\n    private _displacement: number = 1;\r\n    private _image: HTMLImageElement;\r\n\r\n    public constructor() {\r\n        this.container = document.createElement(\"section\");\r\n        this.container.classList.add(\"contents-section\");\r\n\r\n        {\r\n            const textOutputContainer = document.createElement(\"div\");\r\n\r\n            const imageSize = document.createElement(\"div\");\r\n            imageSize.appendChild(document.createTextNode(\"Image size: \"));\r\n            this.textOutputImageSize = document.createElement(\"span\");\r\n            imageSize.appendChild(this.textOutputImageSize);\r\n            textOutputContainer.appendChild(imageSize);\r\n\r\n            const displacement = document.createElement(\"div\");\r\n            displacement.appendChild(document.createTextNode(\"Displacement: \"));\r\n            this.textOuputDisplacement = document.createElement(\"span\");\r\n            displacement.appendChild(this.textOuputDisplacement);\r\n            textOutputContainer.appendChild(displacement);\r\n\r\n            this.container.appendChild(textOutputContainer);\r\n        }\r\n\r\n        {\r\n            this.displacementRange = document.createElement(\"input\");\r\n            this.displacementRange.classList.add(\"full-width-range\");\r\n            this.displacementRange.type = \"range\";\r\n            this.displacementRange.min = \"0\";\r\n            this.displacementRange.max = \"100\";\r\n            this.displacementRange.step = \"1\";\r\n            this.displacementRange.value = \"1\";\r\n            const onNewDisplacement = () => {\r\n                this.displacement = +this.displacementRange.value;\r\n            };\r\n            this.displacementRange.addEventListener(\"change\", onNewDisplacement);\r\n            this.displacementRange.addEventListener(\"input\", onNewDisplacement);\r\n            this.container.appendChild(this.displacementRange);\r\n        }\r\n\r\n        this.canvasElement = document.createElement(\"canvas\");\r\n        this.canvasElement.style.maxWidth = \"100%\";\r\n        this.canvasElement.width = 100;\r\n        this.canvasElement.height = 100;\r\n        this.container.appendChild(this.canvasElement);\r\n\r\n        this.canvasContext = this.canvasElement.getContext(\"2d\");\r\n    }\r\n\r\n    public set image(image: HTMLImageElement) {\r\n        this._image = image;\r\n\r\n        this.canvasElement.width = this._image.width;\r\n        this.canvasElement.height = this._image.height;\r\n\r\n        this.displacementRange.max = this.canvasElement.width.toFixed(0);\r\n\r\n        this.textOutputImageSize.textContent = `${this._image.width}x${this._image.height}`;\r\n\r\n        this.update();\r\n    }\r\n\r\n    public set displacement(displacement: number) {\r\n        this._displacement = displacement;\r\n        this.displacementRange.value = displacement.toFixed(0);\r\n\r\n        this.textOuputDisplacement.textContent = `${displacement.toFixed(0)}px`;\r\n        this.update();\r\n    }\r\n\r\n    private update(): void {\r\n        if (this._image) {\r\n            this.canvasContext.globalCompositeOperation = \"source-over\";\r\n            this.canvasContext.drawImage(this._image, 0, 0, this.canvasElement.width, this.canvasElement.height);\r\n\r\n            if (this._displacement > 0) {\r\n                this.canvasContext.globalCompositeOperation = \"difference\";\r\n                if (this.canvasContext.globalCompositeOperation !== \"difference\") {\r\n                    setCompositingError();\r\n                }\r\n\r\n                this.canvasContext.drawImage(this._image, this._displacement, 0, this.canvasElement.width, this.canvasElement.height);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    Visualization,\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { InputImage } from \"./input-image\";\r\nimport { Processing } from \"./processing\";\r\nimport { Visualization } from \"./visualization\";\r\n\r\n\r\nconst container = document.getElementById(\"contents\");\r\n\r\nconst inputImage = new InputImage();\r\nconst visualization = new Visualization();\r\nconst processing = new Processing();\r\n\r\ncontainer.appendChild(inputImage.container);\r\ncontainer.appendChild(visualization.container);\r\n\r\nlet rawImage: HTMLImageElement;\r\nconst sourceImageSection = document.createElement(\"section\");\r\n{\r\n    sourceImageSection.classList.add(\"contents-section\");\r\n    const description = document.createElement(\"div\");\r\n    description.textContent = \"Source image:\";\r\n    sourceImageSection.appendChild(description);\r\n    sourceImageSection.appendChild(description);\r\n    container.appendChild(sourceImageSection);\r\n}\r\n\r\nfunction onNewImage(): void {\r\n    const image = inputImage.image;\r\n    if (image) {\r\n        visualization.image = image;\r\n        visualization.displacement = processing.detectBasePeriod(image);\r\n\r\n        if (rawImage) {\r\n            rawImage.parentElement.removeChild(rawImage);\r\n        }\r\n        rawImage = image;\r\n        rawImage.style.maxWidth = \"100%\";\r\n        sourceImageSection.appendChild(rawImage);\r\n    }\r\n}\r\n\r\ninputImage.onChangeObservers.push(onNewImage);\r\nonNewImage();\r\n"],"sourceRoot":""}